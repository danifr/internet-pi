# {{ ansible_managed }}
---
version: "3.5"

{% if domain_name_enable and domain_name and domain_pihole %}
{# Make sure pihole and nginx-proxy are in the same network #}
networks:
  front-tier:
    name: internet-monitoring-front-tier
  back-tier:
    name: internet-monitoring-back-tier
{% endif %}

# More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
services:
  pihole-exporter:
    image: ekofr/pihole-exporter:v0.3.0
    container_name: pihole-exporter
    networks:
      - back-tier
      - front-tier
    environment:
      PIHOLE_HOSTNAME:  '{{ pihole_hostname }}'
      PIHOLE_PORT: 80
      PIHOLE_PASSWORD: '{{ pihole_password }}'
      INTERVAL: 30s
      PORT: 9617
    restart: unless-stopped

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    hostname: '{{ pihole_hostname }}'
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    environment:
      TZ: '{{ pihole_timezone }}'
      WEBPASSWORD: '{{ pihole_password }}'
      ServerIP: '{{ ansible_facts['default_ipv4']['address'] }}'
{% if domain_name_enable and domain_name and domain_pihole %}
      VIRTUAL_HOST: {{ domain_pihole }}.{{ domain_name }}
      VIRTUAL_PORT: 80
      PROXY_LOCATION: {{ domain_pihole }}
    networks:
      - front-tier
{% endif %}
    dns:
      - 127.0.0.1
      - 8.8.8.8
    volumes:
      - './etc-pihole/:/etc/pihole/'
      - './etc-dnsmasq.d/:/etc/dnsmasq.d/'
    cap_add:
      - NET_ADMIN
{% if domain_name_enable and domain_name %}
    # adds hostname mappings to pihole /etc/hosts file
    extra_hosts:
      # # LAN hostnames for other docker containers using nginx-proxy
      - "{{ domain_name }}:{{ ansible_facts['default_ipv4']['address'] }}"
{% if domain_name_enable and domain_name and domain_pihole %}
      - "{{ domain_pihole }}.{{ domain_name }}:{{ ansible_facts['default_ipv4']['address'] }}"
{% endif %}
{% if domain_name_enable and domain_name and domain_wireguard %}
      - "{{ domain_wireguard }}.{{ domain_name }}:{{ ansible_facts['default_ipv4']['address'] }}"
{% endif %}
{% if domain_name_enable and domain_name and domain_grafana %}
      - "{{ domain_grafana }}.{{ domain_name }}:{{ ansible_facts['default_ipv4']['address'] }}"
{% endif %}
{% if domain_name_enable and domain_name and domain_prometheus %}
      - "{{ domain_prometheus }}.{{ domain_name }}:{{ ansible_facts['default_ipv4']['address'] }}"
{% endif %}
{% endif %}
    restart: unless-stopped
